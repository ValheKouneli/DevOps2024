Used tool: ChatGPT-4o free version

# How I used it:

I asked ChatGPT to write be the first version of the Go server that
responded to a GET request with the specified information (from exercice 1).
I made ChatGPT re-do my similar node-server that I wrote myself,
using libraries that I picked myself.
I fixed and edited the Node server made by ChatGPT myself. I also wrote myself
add additional server code.
I used ChatGPT to generate me a simple webpage, but I simplified it a lot
and added the code the buttons execute.

After having trouble making something work, I used ChatGPT to give me example
templates for nginx.

I asked it how a container could be stopped from within the container,
and it gave me the idea of using the docker socket.
I also made it suggest ideas on how to be able to use environment variables
in a nginx configuration file.



# Motivation:

## In the first part of the exercice:

I did not have a lot of time to spend for this excercise, for example,
I did not have time to learn how to write a web server in some other language
than Node/JavaScript/TypeScript. I spent relatively long trying to create
a python web server, but I wasn't able to make it work in a container,
although it worked otherwise.

The learning goals of this excerice did not include how to write
a webserver or learning a new language, so I felt the use of LLM was
justified. After I had used ChatGPT to create the Go server, I wanted to
make my node server to match in style and neatness.

I had never used ChatGPT before to write code, and I was interested
in learning how it could be used to get started with a project.
ChatGPT is predicted to be widely used in web development in the future,
and I though it's a good idea to get to know how it can be used.


## In the final part of the exercice:

I had learned that ChatGPT is a handy tool when facing some kind of
road block, or being unable to spot a bug in the code. I knew it could
give be good suggestions without stopping me from learning the essential
stuff. I also liked how it could be used as a preliminary search engine,
meaning I could google search whatever it suggested to me. I knew it would
save me time by generating code that I could easily write myself (html).



# How it helped:

ChatGPT made be able to focus on the primary learning goals of the excercise.
Sometimes it was faster to find information using it than using google alone.
It helped me with some syntax issues and to figure out why something did not
work by giving me ideas about where the problem might lie.
It also gave me the idea to use a socket to stop the container from within,
although I had to turn down a lot of hallucinations before it gave me it.
By using it, I learned a lot of things about how containers operate, because
it always gave a lot of explanations for its suggestions, and because I
had to google everything to make sure it was not hallucinating.
I also learned some useful things because of its hallucinations, for example
about some commercial version of nginx that has more features.


# What kind of mistakes the LLM did:

When writing the node server, GhatGPT's server's response to GET was not
formatted correctly. Many times, it had some small errors in its suggestions
related to formatting or syntax. Sometimes it just plainly gave false information.

When asking it about specific problems, it many times hallucinated solutions that
would not work. It also sometimes forgot the context. However, it always gave some
knew ideas on what to try or what to google next.

It did not always take into account all circumstances, and it sometimes
misunderstood what it was asked to do.
