services:
  frontend-1:
    image: node-docker
    container_name: my_frontend_1
    networks:
      - loadbalancing
      - backend
    expose:
      - "3000"
    environment:
      - PORT=3000
      - SERVER_PORT=8080 
      - FE_WAIT_TIME_MS=2000
    build:
      context: app1
      dockerfile: Dockerfile

  frontend-2:
    image: node-docker
    container_name: my_frontend_2
    networks:
      - loadbalancing
      - backend
    expose:
      - "3000"
    environment:
      - PORT=3000
      - SERVER_PORT=8080
      - FE_WAIT_TIME_MS=2000
    build:
      context: app1
      dockerfile: Dockerfile

  frontend-3:
    image: node-docker
    container_name: my_frontend_3
    networks:
      - loadbalancing
      - backend
    expose:
      - "3000"
    environment:
      - PORT=3000
      - SERVER_PORT=8080
      - FE_WAIT_TIME_MS=2000
    build:
      context: app1
      dockerfile: Dockerfile

  backend:
    image: go-docker
    container_name: my_backend
    networks:
      - backend
    expose:
      - "8080"
    environment:
      - PORT=8080
    build:
      context: app2
      dockerfile: Dockerfile
  
  nginx:
    image: nginx:1-alpine
    container_name: my_nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8198:8198"
    networks:
      - loadbalancing
      - backend
    depends_on:
      - frontend-1
      - frontend-2
      - frontend-3
      - backend

networks:
  loadbalancing:
    driver: bridge
  backend:
